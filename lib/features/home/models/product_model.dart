class Product {
  String? id; // Unique product ID (auto-generated by Firebase)
  String name; // Product name (e.g., "Air Max 90")
  String description; // Product description
  String brandId; // Reference to brand (stored as brand document ID)
  String categoryId; // Reference to category (stored as category document ID)
  double? price; // Price of the shoe
  double? discountPrice; // Optional discounted price
  int stockQuantity; // Available stock
  List<String> imageUrls; // List of image URLs from Cloudinary
  List<String> sizes; // Available sizes (e.g., ["7", "8", "9"])
  // List<String> colors;

  Product({
    this.id,
    required this.name,
    required this.description,
    required this.brandId,
    required this.categoryId,
    required this.price,
    this.discountPrice,
    required this.stockQuantity,
    required this.imageUrls,
    required this.sizes,
    // required this.colors,
  });

  Product copyWith({
    String? id,
    String? name,
    String? description,
    String? brandId,
    String? categoryId,
    double? price,
    double? discountPrice,
    int? stockQuantity,
    List<String>? imageUrls,
    List<String>? sizes,
    // List<String>? colors,
  }) {
    return Product(
      id: id ?? this.id,
      name: name ?? this.name,
      description: description ?? this.description,
      brandId: brandId ?? this.brandId,
      categoryId: categoryId ?? this.categoryId,
      price: price ?? this.price,
      discountPrice: discountPrice ?? this.discountPrice,
      stockQuantity: stockQuantity ?? this.stockQuantity,
      imageUrls: imageUrls ?? this.imageUrls,
      sizes: sizes ?? this.sizes,
    );
  }

  factory Product.fromFirestore(Map<String, dynamic> json, String id) {
    // Safely parse price
    double? parsePrice(dynamic value) {
      if (value == null) return null;
      if (value is double) return value;
      if (value is int) return value.toDouble();
      if (value is String) return double.tryParse(value);
      return null;
    }

    // Safely parse lists
    List<String> parseList(dynamic value) {
      if (value == null) return [];
      if (value is List) {
        return value.map((e) => e?.toString() ?? '').toList();
      }
      return [];
    }

    return Product(
      id: id,
      name: json['name']?.toString() ?? '',
      description: json['description']?.toString() ?? '',
      brandId: json['brandId']?.toString() ?? '',
      categoryId: json['categoryId']?.toString() ?? '',
      price: parsePrice(json['price']),
      discountPrice: parsePrice(json['discountPrice']),
      stockQuantity: json['stockQuantity'] is int ? json['stockQuantity'] : 0,
      imageUrls: parseList(json['imageUrls']),
      sizes: parseList(json['sizes']),
      // colors: parseList(json['colors']),
    );
  }
}













// import 'package:hive/hive.dart';
// part 'product_model.g.dart';

// @HiveType(typeId: 0)
// class Product extends HiveObject {
//   @HiveField(0)
//   String? id;

//   @HiveField(1)
//   String name;

//   @HiveField(2)
//   String description;

//   @HiveField(3)
//   String brandId;

//   @HiveField(4)
//   String categoryId;

//   @HiveField(5)
//   double? price;

//   @HiveField(6)
//   double? discountPrice;

//   @HiveField(7)
//   int stockQuantity;

//   @HiveField(8)
//   List<String> imageUrls;

//   @HiveField(9)
//   List<String> sizes;

//   @HiveField(10)
//   List<String> colors;

//   Product({
//     this.id,
//     required this.name,
//     required this.description,
//     required this.brandId,
//     required this.categoryId,
//     required this.price,
//     this.discountPrice,
//     required this.stockQuantity,
//     required this.imageUrls,
//     required this.sizes,
//     required this.colors,
//   });

//   Product copyWith({
//     String? id,
//     String? name,
//     String? description,
//     String? brandId,
//     String? categoryId,
//     double? price,
//     double? discountPrice,
//     int? stockQuantity,
//     List<String>? imageUrls,
//     List<String>? sizes,
//     List<String>? colors,
//   }) {
//     return Product(
//       id: id ?? this.id,
//       name: name ?? this.name,
//       description: description ?? this.description,
//       brandId: brandId ?? this.brandId,
//       categoryId: categoryId ?? this.categoryId,
//       price: price ?? this.price,
//       discountPrice: discountPrice ?? this.discountPrice,
//       stockQuantity: stockQuantity ?? this.stockQuantity,
//       imageUrls: imageUrls ?? this.imageUrls,
//       sizes: sizes ?? this.sizes,
//       colors: colors ?? this.colors,
//     );
//   }

//   factory Product.fromFirestore(Map<String, dynamic> json, String id) =>
//       Product(
//         id: id,
//         name: json['name'] ?? '',
//         description: json['description'] ?? '',
//         brandId: json['brandId'] ?? '',
//         categoryId: json['categoryId'] ?? '',
//         price:
//             (json['price'] is String)
//                 ? double.tryParse(json['price'])
//                 : json['price']?.toDouble(),
//         discountPrice:
//             (json['discountPrice'] is String)
//                 ? double.tryParse(json['discountPrice'])
//                 : json['discountPrice']?.toDouble(),
//         stockQuantity: json['stockQuantity'] ?? 0,
//         imageUrls: List<String>.from(json['imageUrls']),
//         sizes: List<String>.from(json['sizes']),
//         colors: List<String>.from(json['colors']),
//       );
// }